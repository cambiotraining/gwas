{
  "hash": "e78edac262e0d8020930ecd318156cd3",
  "result": {
    "engine": "knitr",
    "markdown": "---\npagetitle: GWAS\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Variant QC\n\n:::{.callout-tip}\n#### Learning objectives\n\n- List metrics that can be used for variant-level quality control and filtering.\n- Use PLINK to calculate genotype call rates, minor allele frequency and deviations from Hardy-Weinberg equilibrium.\n- Analyse quality metric results in R and assess the need for filtering in downstream analyses. \n- Discuss how these quality metrics are impacted by population structure. \n:::\n\n## Per-variant metrics\n\nBefore proceeding with downstream analyses, it's good practice to investigate quality issues in our variants. \nWe will consider the following metrics for each variant: \n\n- **Call rate**: Fraction of missing genotypes. Variants with a high fraction of missing data may indicate overall low quality and thus be removed from downstream analysis.\n- **Allele frequency**: The frequency of the allele in the population of samples. Variants with low frequency (rare alleles) are usually excluded from downstream analysis as they incur low statistical power for association tests. \n- **Hardy-Weinberg deviations**: In randomly mating populations, there is a theoretical expectation of how many homozygous and heterozygous individuals there should be given the frequency of the two alleles. Deviations from this expectation may be due to genotyping errors.\n\nWe will cover each of these below. \n\n\n:::{.callout-important}\n#### Set up your R session\n\nIf you haven't done so already, start an R session with the following packages loaded: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the libraries\nlibrary(tidyverse) # data manipulation\nlibrary(patchwork) # to compose plots\nlibrary(janitor)   # to clean column names\ntheme_set(theme_minimal()) # change default ggplot2 theme\n```\n:::\n\n\n\n\n:::\n\n\n## Call rates\n\nOne way to assess the genotype quality of each variant is to calculate how many missing genotypes each sample has. \nThis can then be used to assess the need to exclude variants from our downstream analysis. \nThere are no set rules as to what constitutes a \"good call rate\", but typically we may exclude variants with more than ~5% of missing genotypes. \nThis threshold may vary, however, depending on the nature of data you have. \n\n:::{.callout-exercise}\n#### Missing genotype data \n\n- Look at [PLINK's documentation](https://www.cog-genomics.org/plink/2.0/basic_stats) to find the option that calculates missing data reports. \n- Run PLINK with that option, recalling the basic command structure: \n\n    ```bash\n    plink2 --pfile data/plink/1000G_subset --out results/1000G_subset OPTION-HERE\n    ```\n\n- Look at the top lines of the output files from the terminal (using `head`), to see if you understand their structure. \n  You can also consult PLINK's [file format documentation](https://www.cog-genomics.org/plink/2.0/formats). \n\n:::{.callout-answer}\n\nThe option we were being asked to use is called `--missing`, which [the documentation](https://www.cog-genomics.org/plink/2.0/basic_stats#missing) says: \"produces sample-based and variant-based missing data reports\".\n\nWe therefore run the command:\n\n```bash\nplink2 --pfile data/plink/1000G_subset --out results/1000G_subset --missing\n```\n\nThis generates two files with extension `.smiss` (for sample-missingness report) and `.vmiss` (for variant-missingness report).\nThe [file format documentation](https://www.cog-genomics.org/plink/2.0/formats) details the columns present in each of these files. \n\nWe can quickly look at the top rows of each file using the standard `head` command from our terminal: \n\n```bash\nhead results/1000G_subset.vmiss\n```\n\n```\n#CHROM  ID  MISSING_CT  OBS_CT  F_MISS\n1       .   0           904     0\n1       .   0           904     0\n1       .   0           904     0\n1       .   17          904     0.0188053\n1       .   0           904     0\n1       .   0           904     0\n1       .   0           904     0\n1       .   0           904     0\n1       .   0           904     0\n```\n\n:::\n:::\n\nIn the previous exercise, you should have produced a file containing the counts and frequency of missing genotypes for each variant. \nAs [we did before](02-plink.md) for the allele frequency file, we can import this table into R:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvmiss <- read_tsv(\"results/1000G_subset.vmiss\") |> \n  clean_names()\n  \n# inspect the table\nhead(vmiss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  number_chrom id           missing_ct obs_ct f_miss\n         <dbl> <chr>             <dbl>  <dbl>  <dbl>\n1            1 rs141149254           0    904 0     \n2            1 rs76735897            0    904 0     \n3            1 rs1451704981          0    904 0     \n4            1 rs556374459          22    904 0.0243\n5            1 rs372315362           0    904 0     \n6            1 rs867544879           0    904 0     \n```\n\n\n:::\n:::\n\n\n\n\nWe can tabulate how many variants have missing genotypes: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(vmiss$missing_ct > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  FALSE    TRUE \n4119671 1234004 \n```\n\n\n:::\n:::\n\n\n\n\nAround 23% of variants have a missing genotype in at least one of the samples. \nFor those, we can plot the missing rate distribution:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvmiss |> \n  filter(f_miss > 0) |> \n  ggplot(aes(f_miss)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](03-qc_variants_files/figure-html/vmiss-hist-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can see most of these SNVs have relatively low rates of missing data. \n\nWe can see how many variants would be discarded if we used the conventional 5% threshold: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(vmiss$f_miss > 0.05)/nrow(vmiss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.000653383\n```\n\n\n:::\n:::\n\n\n\n\nAt this threshold we will discard a very small fraction of our variants. \nWe can therefore be satisfied that, in general, there are no major issues with our call rates.\n\nIn our downstream analyses, we can exclude variants with >5% missing data by adding the option `--geno 0.05` to PLINK. \n\n\n## Allele frequency\n\nIn the [previous chapter](02-plink.qmd) we already saw how to calculate the allele frequency of our variants using the `--freq` option.\n\nWe can read this file into R as usual:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nafreq <- read_tsv(\"results/1000G_subset.afreq\") |> \n  clean_names()\n  \nhead(afreq)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  number_chrom id    ref   alt   alt_freqs obs_ct\n         <dbl> <chr> <chr> <chr>     <dbl>  <dbl>\n1            1 .     G     A       0.0775    1806\n2            1 .     A     G       0.315     1806\n3            1 .     A     T       0.00332   1806\n4            1 .     T     G       0         1762\n5            1 .     C     G       0.00443   1806\n6            1 .     G     A       0.119     1806\n```\n\n\n:::\n:::\n\n\n\n\nBy default PLINK calculates the allele frequency of the alternative allele. \nHowever, this is somewhat arbitrary, as the alternative allele is simply defined as the allele that different from whichever happens to be the reference genome. \nA more common approach is to visualise the **minor allele frequency (MAF)**, i.e. the frequency of the least-common alelle in the population. \n\nWe can calculate the MAF for each variant, adding it as a new column to our data frame, followed by a new histogram:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add a column of minor allele frequency\nafreq <- afreq |> \n  mutate(maf = ifelse(alt_freqs > 0.5, 1 - alt_freqs, alt_freqs)) \n\n# MAF histogram\nafreq |> \n  ggplot(aes(maf)) +\n  geom_histogram(binwidth = 0.01)\n```\n\n::: {.cell-output-display}\n![](03-qc_variants_files/figure-html/maf-hist-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can see the histogram is quite skewed, with many SNPs having very low frequency. \nIn fact, some of them are not variable at all in our samples!\nWe can quickly tabulate how many SNPs are above the commonly-used 1% threshold of allele frequency: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(afreq$maf > 0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  FALSE    TRUE \n4587526  766149 \n```\n\n\n:::\n:::\n\n\n\n\nWe can see that the majority of variants have very low frequency. \nThese must be variants that have been found to vary in other individuals of the 1000 genomes project, but happen to be invariant in our relatively small collection of samples. \n\nLow frequency variants are often filtered out when performing downstream analyses, such as the association test. \nThis is because they have low statistical power, leading to noisy estimates (you can think of it as having a low sample size for one of the classes of genotypes). \n\nTo exclude variants with low minor allele frequency, for example at a 1% threshold, we can use PLINK's option `--maf 0.01`.\n\n\n## Hardy–Weinberg\n\nAnother quality control step is to check whether SNPs significantly deviate from Hardy-Weinberg equilibrium, which is expected if individuals mate randomly. \n\n```bash\nplink2 --pfile data/plink/1000G_subset --out results/1000G_subset --hardy\n```\n\nThis outputs a file with `.hardy` extension, which we can read into R: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhardy <- read_tsv(\"results/1000G_subset.hardy\") |> \n  clean_names()\n  \nhead(hardy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n  number_chrom id    a1    ax    hom_a1_ct het_a1_ct two_ax_ct o_het_a1 e_het_a1\n         <dbl> <chr> <chr> <chr>     <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n1            1 .     G     A           771       124         8  0.137    0.143  \n2            1 .     A     G           434       369       100  0.409    0.432  \n3            1 .     A     T           897         6         0  0.00664  0.00662\n4            1 .     T     G           881         0         0  0        0      \n5            1 .     C     G           895         8         0  0.00886  0.00882\n6            1 .     G     A           708       175        20  0.194    0.210  \n# ℹ 1 more variable: p <dbl>\n```\n\n\n:::\n:::\n\n\n\n\nOne possible visualisation of these data is to plot the expected heterozygosity versus the observed heterozygosity and colour the points as to whether they are below a chosen p-value threshold:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhardy |> \n  # randomply sample SNPs \n  # to avoid plot window from crashing\n  sample_n(10e3) |> \n  ggplot(aes(e_het_a1, o_het_a1)) + \n  geom_point(aes(colour = p < 0.001)) +\n  geom_abline() +\n  labs(x = \"Expected heterozygosity\", y = \"Observed heterozygosity\")\n```\n\n::: {.cell-output-display}\n![](03-qc_variants_files/figure-html/hardy-scatter-1.png){width=672}\n:::\n:::\n\n\n\n\nFrom this plot, we can see an excess of SNVs with **lower heterozygosity** than expected compared to those with higher heterozygosity. \nThis discrepancy is because our samples originate from diverse global regions that do not form a \"randomly mating population\". \n\nAs an example, consider a variant present in one geographical area (e.g., individuals from a specific country) but absent elsewhere. \nThe Hardy-Weinberg equilibrium assumes random mating across the entire population, therefore variants with limited geographic distribution may appear to have an excess of homozygotes. \nIn reality, these variants are simply missing from certain populations.\n\nSo, while variants might fit Hardy-Weinberg expectations within randomly mating sub-populations, they will seem to deviate from it when these groups are pooled together. \nThis phenomenon is known as the **Wahlund effect** and results from **population structure**, a topic which we return to in a later chapter. \n\nIn downstream analysis, we can exclude SNPs with a low p-value for the Hardy-Weinberg deviation test. \nHowever, due to the population structure issue just discussed, we only exclude SNPs with higher-than-expected heterozygosity. \nHigh rates of heterozygosity may indicate genotyping errors, which we want to eliminate. \nWehreas low rates of heterozygosity may simply be due to population structure, which we want to retian. \nTo discard only high heterozygosity SNVs having p-value < 0.001, we can use the option `--hwe 0.001 keep-fewhe`. \n\n\n:::{.callout-tip}\n#### Tip: Running multiple options at once\n\nWe have seen a few PLINK commands that are useful for checking properties of our genotype data: \n\n- `--missing` to assess genotype missingness both across SNPs and samples.\n- `--freq` to assess the allele frequency across SNPs.\n- `--hardy` to assess genotype frequency deviations from the Hardy-Weinberg equilibrium expectation. \n\nSo far, we have run each of these options individually, however you can run multiple options simultaneously. \nFor example, our previous analyses could have been run with a single command: \n\n```bash\nplink2 --pfile data/plink/1000G_subset --out results/1000G_subset --freq --hardy --missing\n```\n\nThis would produce all three respective results files in one go. \n:::\n\n<!-- \n## LD prunning\n\nTODO\n-->\n\n## Summary\n\n::: {.callout-tip}\n#### Key Points\n\n- TODO\n:::\n",
    "supporting": [
      "03-qc_variants_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}