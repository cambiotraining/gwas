{
  "hash": "869bee7a4239387b73549a65a631eb40",
  "result": {
    "engine": "knitr",
    "markdown": "---\npagetitle: GWAS\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Running GWAS\n\n:::{.callout-tip}\n#### Learning objectives\n\n- Fit a GLM model to trait data using PLINK both with and without covariates.\n- Generate Q-Q plots for the p-values from the association test, to assess over- or under-inflation issues.\n- Recognise and apply correction for population structure in the GLM model.\n\n:::\n\n\n## GLM\n\nFitting a genotypic linear model to our traits with PLINK can be done using the `--glm` option (for \"generalised linear model\"). \nWe also need to provide a phenotype file, which is tab-delimited with the first two columns being the family and sample IDs, and remaining columns the traits. \nPLINK will automatically detect whether the traits are continous or binary and fit a model accordingly. \n\nAs before, we apply the quality filters discussed in previous sections. \nHere is the full command: \n\n```bash\nplink2 --pfile data/plink/1000G_subset --out results/1000G_subset_nocovar \\\n  --geno 0.05 --maf 0.01 --hwe 0.001 keep-fewhet \\\n  --mind 0.05 --keep results/1000G_subset.king.cutoff.in.id \\\n  --pheno data/phenotypes.tsv \\\n  --glm allow-no-covars\n```\n\nThis command outputs one file for each trait. \nThe file extensions are `.glm.linear` for quantitative traits and `.glm.logistic.hybrid` for binary traits. \n\n\n:::{.callout-important}\n#### Set up your R session\n\nIf you haven't done so already, start an R session with the following packages loaded: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the libraries\nlibrary(tidyverse) # data manipulation\nlibrary(patchwork) # to compose plots\nlibrary(janitor)   # to clean column names\ntheme_set(theme_minimal()) # change default ggplot2 theme\n```\n:::\n\n\n\n\n:::\n\n\n## Q-Q plots\n\nThe results files are tab-delimited, which we can read into R as usual. \nWe start with one of our quantiative traits, blood pressure: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_nocovar <- read_tsv(\"results/1000G_subset_nocovar.blood.glm.linear\") |> \n  clean_names()\n\nhead(blood_nocovar)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 16\n  number_chrom    pos id       ref   alt   provisional_ref a1    omitted a1_freq\n         <dbl>  <dbl> <chr>    <chr> <chr> <chr>           <chr> <chr>     <dbl>\n1            1  54490 rs14114… G     A     N               A     G        0.0787\n2            1  61987 rs76735… A     G     N               G     A        0.317 \n3            1  83795 rs86754… G     A     N               A     G        0.117 \n4            1  86331 rs11520… A     G     N               G     A        0.132 \n5            1  88177 rs14321… G     C     N               C     G        0.0382\n6            1 181508 rs14778… G     C     N               C     G        0.0238\n# ℹ 7 more variables: test <chr>, obs_ct <dbl>, beta <dbl>, se <dbl>,\n#   t_stat <dbl>, p <dbl>, errcode <chr>\n```\n\n\n:::\n:::\n\n\n\n\nWe can look at the distribution of our p-values using a histogram.\n\nhttp://varianceexplained.org/statistics/interpreting-pvalue-histogram/\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_nocovar |> \n  ggplot(aes(p)) +\n  geom_histogram(binwidth = 0.01)\n```\n\n::: {.cell-output-display}\n![](07-glm_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nThis looks relatively uniform towards the right-end of the distribution, but there's quite a sharp skew towards the low end. \nThis may indicate some p-value inflation due to unaccounted confounders. \n\nQ-Q plot: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_nocovar |> \n  arrange(p) |> \n  mutate(expected = -log10(ppoints(n())), \n         observed = -log10(p)) |> \n  # retain all p-values below 0.001\n  # but only ~5% of those above that threshold\n  filter(p <= 0.001 | (p > 0.001 & runif(n()) < 0.05)) |> \n  ggplot(aes(expected, observed)) +\n  geom_point() +\n  geom_abline()\n```\n\n::: {.cell-output-display}\n![](07-glm_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nInflation factor:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(qchisq(blood_nocovar$p, df=1, lower.tail = F), na.rm = T)/qchisq(0.5, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.065899\n```\n\n\n:::\n:::\n\n\n\n\n\nWe can look a distribution of our trait value across world regions and see there are differences across the continents, which will counfound the results:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno <- read_tsv(\"data/phenotypes.tsv\")\nsample_info <- read_tsv(\"data/sample_info.tsv\")\n\nsample_info |> \n  full_join(pheno, by = c(\"individual_id\" = \"IID\")) |> \n  ggplot(aes(blood, population, fill = super_pop)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](07-glm_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Correct for population structure\n\nWe now re-run the GLM, using PCA eigenvectors as covariates in the model:\n\n```bash\nplink2 --pfile data/plink/1000G_subset --out results/1000G_subset_pca \\\n  --geno 0.05 --maf 0.01 --hwe 0.001 keep-fewhet \\\n  --mind 0.05 --keep results/1000G_subset.king.cutoff.in.id \\\n  --pheno data/phenotypes.tsv \\\n  --glm \\\n  --covar results/1000G_subset.eigenvec\n```\n\nWe can import and visualise the new results:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblood_pca <- read_tsv(\"results/1000G_subset_pca.blood.glm.linear\") |> \n  clean_names()\n  \n# retain only the SNP test results\nblood_pca <- blood_pca |> \n  filter(test == \"ADD\")\n\n# histogram of p-values\nblood_pca |> \n  arrange(p) |> \n  mutate(expected = -log10(ppoints(n())), \n         observed = -log10(p)) |> \n  filter(p <= 0.001 | (p > 0.001 & runif(n()) < 0.01)) |> \n  ggplot(aes(p)) +\n  geom_histogram(binwidth = 0.01) +\n  labs(title = \"P-value histogram\")\n```\n\n::: {.cell-output-display}\n![](07-glm_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# qqplot\nblood_pca |> \n  arrange(p) |> \n  mutate(expected = -log10(ppoints(n())), \n         observed = -log10(p)) |> \n  filter(p <= 0.001 | (p > 0.001 & runif(n()) < 0.01)) |> \n  ggplot(aes(expected, observed)) +\n  geom_point() +\n  geom_abline() + \n  labs(title = \"Q-Q plot\")\n```\n\n::: {.cell-output-display}\n![](07-glm_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n\n\nInflation factor:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(qchisq(blood_pca$p, df=1, lower.tail = F), na.rm = T)/qchisq(0.5, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.013847\n```\n\n\n:::\n:::\n\n\n\n\n\n## Summary\n\n::: {.callout-tip}\n#### Key Points\n\n- TODO\n:::\n",
    "supporting": [
      "07-glm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}