{
  "hash": "c42beb32319a817376536cd644fb8055",
  "result": {
    "engine": "knitr",
    "markdown": "---\npagetitle: GWAS\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Statistical models for GWAS\n\n:::{.callout-tip}\n#### Learning objectives\n\n- Summarise the statistical methods used by PLINK to carry out trait-genotype association tests.\n- Interpret the effect sizes of an association in relation to individual genotypes. \n- Distinguish how the interpretation of effect sizes differs for quantitative and binary trait models.\n:::\n\n\n## Association tests\n\nAt its simplest, the association test carried out by software such as PLINK is based on linear regression models. \nMost GWAS software support two types of regression models, depending on the nature of the trait: **normal** regression for quantitative traits or **binomial (logistic)** regression for binary traits (case/control, yes/no, presence/absence).\n\nWe go over the intuition for each of these approaches.\nIn the examples below we assume there are two alleles at a variant (i.e. it is bi-allelic), with alleles \"A\" and \"B\". \nThe three diploid genotypes are written as \"AA\", \"AB\" and \"BB\".\n\n\n## Quantitative trait models\n\nFor **quantitative traits** we assume that the trait is well-approximated by a Normal distribution, $Trait \\sim N(\\mu, \\sigma^2)$ with mean $\\mu$ and variance $\\sigma^2$. \nThe mean of this distribution is modelled as dependent on genotype, and we test for the significance of this relationship.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-stats_files/figure-html/regression-sim-1.png){width=672}\n:::\n:::\n\n\n\n\nThe strength of the relationship between genotype and trait is measured by the slope of the regression line, often referred to as **Beta (Î²)**. \n\nFor example, if our trait was blood pressure measured in _mm Hg_, and we estimated Î² = 3 for a given variant, this would be the interpretation of the results:\n\n- Genotype AA: baseline group (carrying zero \"B\" alleles).\n- Genotype AB: +3 mg Hg compared to AA.\n- Genotype BB: +6 mg Hg compared to AA.\n\nThis is a so-called \"additive genetic model\", where we code the genotypes as \"number of B alleles\" and we thus assume that homozygotes \"BB\" increase by twice relative to heterozygotes. \n\nThe **significance of association** is determined by testing for the slope of the regression being zero (i.e. a flat line). \nThis is done by using a t-statistic, which measures the \"signal-to-noise\" ratio of our estimate, and comparing it to a theoretical distribution to obtain a **p-value** for the association. \n\n:::{.callout-note}\n#### Quantitative traits\n\nQuantitative traits may include both continuous type of data (e.g. bmi, height) as well as and discrete count data (e.g. cell count, cigarette consumption). \nIn generalised linear models, count data would usually be modelled using a more appropriate distribution rather than the Normal (e.g. a Poisson or Negative Binomial regression). \n\nHowever, these methods can be computationally expensive and so, in practice, software packages for GWAS usually only implement the normal regression model for quantitative traits. \n:::\n\n\n## Binary trait models\n\nConceptually, things are very similar for **binary traits**, except we assume the trait comes from a binomial (think of coin flips ðŸª™): $Trait \\sim Binomial(n, p)$ with known sample size $n$ (that's how many individuals we have) and a probability $p$ that the event happens. \nThe probability $p$ is modelled as depending on genotype, and we test for the significance of this relationship. \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-stats_files/figure-html/logistic-sim-1.png){width=672}\n:::\n:::\n\n\n\n\nFor binary traits, the strength of the relationship between trait and genotype is expressed as an **odds ratio (OR)**, i.e. the ratio of the probability that the event occurs over the probability that it doesn't: \n\n$$\n\\text{Odds Ratio} = \\frac{p}{1 - p}\n$$\n\nTaking a concrete example, if our trait is \"type 2 diabetes\", the odds ratio represents the probability change in having this condition, relative to not having it:\n\n$$\n\\text{Odds Ratio} = \\frac{\\text{probability diabetes}}{\\text{probability healthy}}\n$$\n\nOne important thing to consider is that the coefficients of logistic regression models are multiplicative.\nFor example, if the estimate for a given variant was OR = 3, the interpretation in terms of genotypes is:\n\n- Genotype AA: baseline group (carrying zero \"B\" alleles).\n- Genotype AB: 3 times more likely to have the condition than AA.\n- Genotype BB: 3Â² = 9 times more likely to have the condition than AA.\n\nThe **significance of association** in this case is assessed using a Wald Z-statistic, which similarly to the t-statistic discussed earlier, measures the \"signal-to-noise\" ratio of our OR estimate.\nAs usual, this is compared to a theoretical distribution to obtain a **p-value** for the association.\n\n\n:::{.callout-important}\n#### Effect sizes\n\nIn the examples given above we used relatively large effect sizes, for illustration purposes. \nFor complex traits the effects of individual variants might be quite small. \nFor example, for type 2 diabetes many found associations have OR of ~1.1 or even less. \nFor reference, this represents a probability of 52% of having the disease compared to 48% for not having it. \n\nThese are still substantial effects, but not as large as what we used in the examples above. \n:::\n\n\n:::{.callout-note}\n#### Odds, log-odds and probabilities\n\nLogistic regression models can be challenging to interpret and working with odds is sometimes confusing. \nRemember, the odds is a ratio of two probabilities: the probability of an event happening versus it not happening. \n\nBecause of the underlying maths, logistic regression coefficients are usually given as log-odds. \nThis is exactly how it sounds like, it's the natural log of the odds ratio. \nThis is also known as the logit function.\n\nI can be useful to convert probabilities to odds (or log-odds) and back. \nSay an event has a 75% chancde of happening, we can calculate odds and log-odds easily: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# if you know your probability\np <- 0.75\n\n# calculate odds as:\n0.75 / (1 - 0.75)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\n# and log-odds taking the natural log of the previous\nlog(0.75 / (1 - 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.098612\n```\n\n\n:::\n:::\n\n\n\n\nOn the other hand, if you start from having the odds ratio, for example OR = 3, then you need to: \nfirst convert it to log-odds (or \"logit\"); then use the inverse-logit function to calculate the probability.\nHere's the R code: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# if you know your odds\nodds <- 3\n\n# calculate the probability of the event using the inverse-logit\nplogis(log(odds))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.75\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n\n## Summary\n\n::: {.callout-tip}\n#### Key Points\n\n- TODO\n:::\n",
    "supporting": [
      "06-stats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}