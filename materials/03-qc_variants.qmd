---
pagetitle: GWAS
---

```{r setup, echo=FALSE, message=FALSE, warning=FALSE, purl=FALSE}
knitr::opts_chunk$set(error=FALSE, message=FALSE, warning=FALSE)
knitr::opts_knit$set(root.dir = "../course_files")
set.seed(123)
```

# Variant QC

:::{.callout-tip}
#### Learning objectives

- List metrics that can be used for variant-level quality control and filtering.
- Use PLINK to calculate genotype call rates, minor allele frequency and deviations from Hardy-Weinberg equilibrium.
- Analyse quality metric results in R and assess the need for filtering in downstream analyses. 
- Discuss how these quality metrics are impacted by population structure. 
:::

## Per-variant metrics

Before proceeding with downstream analyses, it's good practice to investigate quality issues in our variants. 
We will consider the following metrics for each variant: 

- **Call rate**: Fraction of missing genotypes. Variants with a high fraction of missing data may indicate overall low quality and thus be removed from downstream analysis.
- **Allele frequency**: The frequency of the allele in the population of samples. Variants with low frequency (rare alleles) are usually excluded from downstream analysis as they incur low statistical power for association tests. 
- **Hardy-Weinberg deviations**: In randomly mating populations, there is a theoretical expectation of how many homozygous and heterozygous individuals there should be given the frequency of the two alleles. Deviations from this expectation may be due to genotyping errors.

We will cover each of these below. 
Continuing from previous chapters, we use an R session with the following packages loaded: 

```{r}
# load the libraries
library(tidyverse) # data manipulation
library(patchwork) # to compose plots
library(janitor)   # to clean column names
theme_set(theme_minimal()) # change default ggplot2 theme
```


## Call rates

One way to assess the genotype quality of each variant is to calculate how many missing genotypes each sample has. 
This can then be used to assess the need to exclude variants from our downstream analysis. 
There are no set rules as to what constitutes a "good call rate", but typically we may exclude variants with more than ~5% of missing genotypes. 
This threshold may vary, however, depending on the nature of data you have. 

:::{.callout-exercise}
#### Missing genotype data 

- Look at [PLINK's documentation](https://www.cog-genomics.org/plink/2.0/basic_stats) to find the option that calculates missing data reports. 
- Run PLINK with that option, recalling the basic command structure: 

    ```bash
    plink2 --pfile data/plink/1000G_subset --out results/1000G_subset OPTION-HERE
    ```

- Look at the top lines of the output files from the terminal (using `head`), to see if you understand their structure. 
  You can also consult PLINK's [file format documentation](https://www.cog-genomics.org/plink/2.0/formats). 

:::{.callout-answer}

The option we were being asked to use is called `--missing`, which [the documentation](https://www.cog-genomics.org/plink/2.0/basic_stats#missing) says: "produces sample-based and variant-based missing data reports".

We therefore run the command:

```bash
plink2 --pfile data/plink/1000G_subset --out results/1000G_subset --missing
```

This generates two files with extension `.smiss` (for sample-missingness report) and `.vmiss` (for variant-missingness report).
The [file format documentation](https://www.cog-genomics.org/plink/2.0/formats) details the columns present in each of these files. 

We can quickly look at the top rows of each file using the standard `head` command from our terminal: 

```bash
head results/1000G_subset.vmiss
```

```
#CHROM  ID  MISSING_CT  OBS_CT  F_MISS
1       .   0           904     0
1       .   0           904     0
1       .   0           904     0
1       .   17          904     0.0188053
1       .   0           904     0
1       .   0           904     0
1       .   0           904     0
1       .   0           904     0
1       .   0           904     0
```

:::
:::

In the previous exercise, you should have produced a file containing the counts and frequency of missing genotypes for each variant. 
As [we did before](02-plink.md) for the allele frequency file, we can import this table into R:

```{r read-smiss}
vmiss <- read_tsv("results/1000G_subset.vmiss") |> 
  clean_names()
  
# inspect the table
head(vmiss)
```

We can tabulate how many variants have missing genotypes: 

```{r}
table(vmiss$missing_ct > 0)
```

Around `r round(sum(vmiss$missing_ct > 0)/nrow(vmiss)*100)`% of variants have a missing genotype in at least one of the samples. 
For those, we can plot the missing rate distribution:

```{r}
vmiss |> 
  filter(f_miss > 0) |> 
  ggplot(aes(f_miss)) +
  geom_histogram()
```

We can see most of these SNVs have relatively low rates of missing data. 

We can see how many variants would be discarded if we used the conventional 5% threshold: 

```{r}
sum(vmiss$f_miss > 0.05)/nrow(vmiss)
```

At this threshold we will discard around `r round(sum(vmiss$f_miss > 0.05)/nrow(vmiss)*100)`% of variants, which is not a substantial number. 
We can be satisfied that, in general, there are no major issues with our call rates.

In our downstream analyses, we can exclude variants with >5% missing data by adding the option `--geno 0.05` to PLINK. 


## Allele frequency

In the [previous chapter](02-plink.qmd) we already saw how to calculate the allele frequency of our variants using the `--freq` option.

We can read this file into R as usual:

```{r}
afreq <- read_tsv("results/1000G_subset.afreq") |> 
  clean_names()
  
head(afreq)
```

By default PLINK calculates the allele frequency of the alternative allele. 
However, this is somewhat arbitrary, as the alternative allele is simply defined as the allele that different from whichever happens to be the reference genome. 
A more common approach is to visualise the **minor allele frequency (MAF)**, i.e. the frequency of the least-common alelle in the population. 

We can calculate the MAF for each variant, adding it as a new column to our data frame, followed by a new histogram:

```{r plot-maf}
# add a column of minor allele frequency
afreq <- afreq |> 
  mutate(maf = ifelse(alt_freqs > 0.5, 1 - alt_freqs, alt_freqs)) 

# MAF histogram
afreq |> 
  ggplot(aes(maf)) +
  geom_histogram(binwidth = 0.01)
```

We can see the histogram is quite skewed, with many SNPs having very low frequency. 
In fact, some of them are not variable at all in our samples!
We can quickly tabulate how many SNPs are above the commonly-used 1% threshold of allele frequency: 

```{r}
table(afreq$maf > 0.01)
```

We can see that the majority of variants have very low frequency. 
These must be variants that have been found to vary in other individuals of the 1000 genomes project, but happen to be invariant in our relatively small collection of samples. 

Low frequency variants are often filtered out when performing downstream analyses, such as the association test. 
This is because they have low statistical power, leading to noisy estimates (you can think of it as having a low sample size for one of the classes of genotypes). 

To exclude variants with low minor allele frequency, for example at a 1% threshold, we can use PLINK's option `--maf 0.01`.


## Hardyâ€“Weinberg

Another quality control step is to check whether SNPs significantly deviate from Hardy-Weinberg equilibrium, which is expected if individuals mate randomly. 

```bash
plink2 --pfile data/plink/1000G_subset --out results/1000G_subset --geno 0.05 --maf 0.01 --hardy
```

This outputs a file with `.hardy` extension, which we can read into R: 

```{r}
hardy <- read_tsv("results/1000G_subset.hardy") |> 
  clean_names()

hardy |> 
  # randomply sample SNPs 
  # to avoid plot window from crashing
  sample_n(10e3) |> 
  ggplot(aes(e_het_a1, o_het_a1)) + 
  geom_point(aes(colour = p < 0.001)) +
  geom_abline() +
  labs(x = "Expected heterozygosity", y = "Observed heterozygosity")
```

From this plot, we can see an excess of SNVs with **lower heterozygosity** than expected compared to those with higher heterozygosity. 
This discrepancy is because our samples originate from diverse global regions that do not form a "randomly mating population". 

As an example, consider a variant present in one geographical area (e.g., individuals from a specific country) but absent elsewhere. 
The Hardy-Weinberg equilibrium assumes random mating across the entire population, therefore variants with limited geographic distribution may appear to have an excess of homozygotes. 
In reality, these variants are simply missing from certain populations.

So, while variants might fit Hardy-Weinberg expectations within randomly mating sub-populations, they will seem to deviate from it when these groups are pooled together. 
This phenomenon is known as the **Wahlund effect** and results from **population structure**, a topic which we return to in a later chapter. 

In downstream analysis, we can exclude SNPs with a low p-value for the Hardy-Weinberg deviation test. 
However, due to the population structure issue just discussed, we only exclude SNPs with higher-than-expected heterozygosity. 
High rates of heterozygosity may indicate genotyping errors, which we want to eliminate. 
Wehreas low rates of heterozygosity may simply be due to population structure, which we want to retian. 
To discard only high heterozygosity SNVs having p-value < 0.001, we can use the option `--hwe 0.001 keep-fewhe`. 


:::{.callout-tip}
#### Tip: Running multiple options at once

We have seen a few PLINK commands that are useful for checking properties of our genotype data: 

- `--missing` to assess genotype missingness both across SNPs and samples.
- `--freq` to assess the allele frequency across SNPs.
- `--hardy` to assess genotype frequency deviations from the Hardy-Weinberg equilibrium expectation. 

So far, we have run each of these options individually, however you can run multiple options simultaneously. 
For example, our previous analyses could have been run with a single command: 

```bash
plink2 --pfile data/plink/1000G_subset --out results/1000G_subset --freq --hardy --missing
```

This would produce all three respective results files in one go. 
:::


## Summary

::: {.callout-tip}
#### Key Points

- TODO
:::
